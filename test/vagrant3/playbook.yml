---

- hosts: ghost
  gather_facts: no
  vars_files:
    - vars.yml

  pre_tasks:
    - name: Wait 300 seconds for port 22 to become open and contain "OpenSSH"
      wait_for:
        port: 22
        host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
        search_regex: OpenSSH
        delay: 10
      connection: local

    - name: Gather Facts
      setup:

    - name: update cache
      apt: update_cache=yes cache_valid_time=3600
      become: yes

  tasks:
    - name: Install swapspace
      apt:
        name: swapspace
        state: present
      become: yes

    - name: Adding ghost group
      group:
        name: "{{ ghost_user_group }}"
        system: yes
        state: present
      become: yes

    - name: Adding ghost user
      user:
        name: "{{ ghost_user_name }}"
        group: "{{ ghost_user_group }}"
        home: "{{ ghost_user_home }}"
        createhome: yes
        shell: /bin/false
        system: yes
        state: present
      become: yes

    - name: check if ghost blog path exists
      stat:
        path: "{{ ghost_install_dir }}"
      register: ghost_check_installation_dir

    - name: create directory for ghost blog if required
      file:
        path: "{{ ghost_install_dir }}"
        owner: "{{ ghost_user_name }}"
        group: "{{ ghost_user_group }}"
        mode: 0775
        state: directory
        recurse: true
      become: yes
      when: ghost_check_installation_dir.stat.exists==false

    - name: check if .nvm exists
      stat: path="{{ ansible_env.HOME }}/.nvm"
      register: nvm_dir_check
      ignore_errors: true

    - name: install nvm if it doesn't exists
      shell: >
        curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash
      when: nvm_dir_check.stat.exists==false

    - name: source nvm in ~/.profile if it doesn't exist
      lineinfile: >
        dest=~/.profile
        line="source ~/.nvm/nvm.sh"
        create=yes
      become_user: "{{ ansible_user_id }}"
      become: yes
      register: sourcenvm

    # https://stackoverflow.com/questions/22256884/not-possible-to-source-bashrc-with-ansible
    - name: source nvm
      shell: >
        sudo -iu {{ ansible_user_id }} command -v nvm
      register: nvm_check
      args:
        warn: false
      when: sourcenvm.changed==true

    - name: install nodejs
      shell: >
        sudo -iu {{ ansible_user_id }} nvm install {{ node_version }}
      register: nodejs_install_result
      changed_when: nodejs_install_result.stderr.find("is already installed") < 0

    - name: create node and npm symlinks
      file:
        src: "{{ nvm_path }}/{{ node_version }}/bin/{{ item.src }}"
        dest: "{{ system_bin_path }}/{{ item.dest }}"
        owner: "{{ ghost_user_name }}"
        group: "{{ ghost_user_group }}"
        state: link
      with_items:
        - {src: 'npm', dest: 'npm'}
        - {src: 'node', dest: 'node'}
      become: yes

    - name: install packages via npm globally
      npm:
        name: "{{ item }}"
        global: yes
        state: present
      with_items:
        - sqlite3
        - ghost-cli

    - name: create ghost symlink
      file:
        src: "{{ nvm_path }}/{{ node_version }}/bin/ghost"
        dest: "{{ system_bin_path }}/ghost"
        owner: "{{ ghost_user_name }}"
        group: "{{ ghost_user_group }}"
        state: link
      become: yes

    - name: check if ghost blog exists
      shell:
        cmd:  ghost --version
        chdir: "{{ ghost_install_dir }}"
      become_user: "{{ ghost_user_name }}"
      become: yes
      register: ghostversion
      changed_when:
        - '"Ghost-CLI version" not in ghostversion.stdout'

    - name: install ghost locally using ghost-cli and sqlite3
      shell:
        cmd:  ghost install local --url=http://{{ ghost_url.host }} --ip=0.0.0.0 --port={{ ghost_url.port }} --db=sqlite3 --no-prompt
        chdir: "{{ ghost_install_dir }}"
      become_user: "{{ ghost_user_name }}"
      become: yes
      when:
        - '"Ghost Version" not in ghostversion.stdout'

    - name: Install Nginx
      apt:
        name: nginx
        state: present
      become: yes

    - name: Remove default config
      file:
        path: "{{ item.src }}/default"
        state: absent
      with_items:
        - { src: "{{ nginx_sites_available_dir }}" }
        - { src: "{{ nginx_sites_enabled_dir }}" }
      become: yes

    - name: Create nginx config file for reverse-proxy
      template:
        src: ghostblog.conf.j2
        dest: "{{ nginx_sites_available_dir }}/{{ ghost_nginx_conf_name }}"
      notify: restart nginx
      with_items:
        "{{ nginx_reverse_proxies }}"
      become: yes

    - name: symlink nginx config to sites-enabled
      file:
        src: "{{ nginx_sites_available_dir }}/{{ ghost_nginx_conf_name }}"
        dest: "{{ nginx_sites_enabled_dir }}/{{ ghost_nginx_conf_name }}"
        state: link
      become: yes

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted
      become: yes
